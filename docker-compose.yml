networks:
  webdev:
    driver: bridge

volumes:
  mysql:
    driver: local
  mariadb-lts:
    driver: local

services:
  # NGINX
  # ==============================================================================
  nginx:
    build:
      context: ./nginx
    working_dir: /var/www
    volumes:
      - ./..:/var/www
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    networks:
      - webdev
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # PHP 7.4
  # ==============================================================================
  php-fpm74:
    build:
      context: ./php/fpm/7.4
    volumes:
      - ./..:/var/www
      - ./php/fpm/7.4/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - webdev

  php-cli74:
    build:
      context: ./php/cli/7.4
    volumes:
      - ./..:/var/www
    stdin_open: true
    tty: true
    networks:
      - webdev

  # PHP 8.2
  # ==============================================================================
  php-fpm82:
    build:
      context: ./php/fpm/8.2
    volumes:
      - ./..:/var/www
      - ./php/fpm/8.2/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - webdev

  php-cli82:
    build:
      context: ./php/cli/8.2
    volumes:
      - ./..:/var/www
    stdin_open: true
    tty: true
    networks:
      - webdev

  # PHP 8.3
  # ==============================================================================
  php-fpm83:
    build:
      context: ./php/fpm/8.3
    volumes:
      - ./..:/var/www
      - ./php/fpm/8.3/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - webdev

  php-cli83:
    build:
      context: ./php/cli/8.3
    volumes:
      - ./..:/var/www
    stdin_open: true
    tty: true
    networks:
      - webdev

  # PHP 8.4
  # ==============================================================================
  php-fpm84:
    build:
      context: ./php/fpm/8.4
    volumes:
      - ./..:/var/www
      - ./php/fpm/8.4/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - webdev

  php-cli84:
    build:
      context: ./php/cli/8.4
    volumes:
      - ./..:/var/www
    stdin_open: true
    tty: true
    networks:
      - webdev

  # NODE LTS WITH ANGULAR CLI
  # ==============================================================================
  angular:
    build:
      context: ./angular
    working_dir: /var/www
    volumes:
      - ./..:/var/www
    ports:
      - 8001:8888
      - 8002:4200
    networks:
      - webdev
    stdin_open: true
    tty: true

  # MYSQL LTS
  # ==============================================================================
  mysql:
    build:
      context: ./mysql/lts
      args:
        - TZ=${TIMEZONE}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql-lts:/var/lib/mysql
      - ./mysql/lts/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - webdev

  # MariaDB LTS
  # ==============================================================================
  mariadb-lts:
    build:
      context: ./mariadb/lts
      args:
        - TZ=${TIMEZONE}
    environment:
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
    volumes:
      - mariadb-lts:/var/lib/mysql
      - ./mariadb/lts/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    networks:
      - webdev

  # REDIS
  # ==============================================================================
  redis:
    image: redis:alpine
    command: --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - webdev
