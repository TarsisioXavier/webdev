version: "3.8"

networks:
  laraenv:
    driver: bridge

volumes:
  mysql80:
    driver: local

services:
  # NGINX
  # ==============================================================================
  nginx:
    build:
      context: ./nginx
    working_dir: /var/www
    volumes:
      - ./..:/var/www
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    networks:
      - laraenv
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # PHP 8.3
  # ==============================================================================
  php-fpm83:
    build:
      context: ./php/fpm/8.3
    volumes:
      - ./..:/var/www
      - ./php/fpm/8.3/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - laraenv

  php-cli83:
    build:
      context: ./php/cli/8.3
    volumes:
      - ./..:/var/www
    stdin_open: true
    tty: true
    networks:
      - laraenv

  # PHP 8.4
  # ==============================================================================
  php-fpm84:
    build:
      context: ./php/fpm/8.4
    volumes:
      - ./..:/var/www
      - ./php/fpm/8.4/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - laraenv

  php-cli84:
    build:
      context: ./php/cli/8.4
    volumes:
      - ./..:/var/www
    stdin_open: true
    tty: true
    networks:
      - laraenv

  # NODE LTS WITH ANGULAR CLI
  # ==============================================================================
  angular:
    build:
      context: ./angular
    working_dir: /var/www
    volumes:
      - ./..:/var/www
    ports:
      - 8001:8888
      - 8002:4200
    networks:
      - laraenv
    stdin_open: true
    tty: true

  # MYSQL 8.0
  # ==============================================================================
  mysql80:
    build:
      context: ./mysql/8.0
      args:
        - TZ=${TIMEZONE}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql80:/var/lib/mysql
      - ./mysql/8.0/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - laraenv

  # REDIS
  # ==============================================================================
  redis:
    image: redis:alpine
    command: --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - laraenv
